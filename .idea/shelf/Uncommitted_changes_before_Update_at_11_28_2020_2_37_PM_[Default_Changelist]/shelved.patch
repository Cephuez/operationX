Index: app/src/main/java/com/example/operationx/OperationGameplay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class OperationGameplay extends AppCompatActivity {\r\n\r\n    private Drawable tileTest;\r\n    private ImageView level;\r\n    private GameTile gameView;\r\n    private Canvas canvas;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.game_layout);\r\n\r\n        createCanvas();\r\n        createTileMap();\r\n        createPlayer();\r\n        beginPlayerMovement();\r\n    }\r\n\r\n    private void createCanvas(){\r\n\r\n    }\r\n    private void createPlayer(){\r\n        Player player = new Player(this,R.drawable.player_1);\r\n    }\r\n\r\n\r\n    private void createTileMap(){\r\n        gameView = new GameTile(this);\r\n\r\n        LinearLayout gameLayout = findViewById(R.id.game_view);\r\n        Bitmap result = Bitmap.createBitmap(500,500,Bitmap.Config.ARGB_8888);\r\n        canvas = new Canvas(result);\r\n\r\n        gameView.draw(canvas);\r\n        gameView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 1500));\r\n        gameLayout.addView(gameView);\r\n    }\r\n\r\n    private void beginPlayerMovement(){\r\n        new Timer().scheduleAtFixedRate(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                gameView.changeXPos();\r\n                gameView.clearCanvas();\r\n                gameView.draw(canvas);\r\n            }\r\n        }, 0, 100);//put here time 1000 milliseconds=1 second\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/OperationGameplay.java	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ app/src/main/java/com/example/operationx/OperationGameplay.java	(date 1606524450426)
@@ -5,15 +5,16 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
+import android.os.Handler;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.fragment.app.FragmentTransaction;
 
 import java.util.Timer;
 import java.util.TimerTask;
@@ -28,21 +29,17 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.game_layout);
-
-        createCanvas();
+        //createButtons();
         createTileMap();
-        createPlayer();
         beginPlayerMovement();
     }
 
-    private void createCanvas(){
-
+    private void createButtons(){
+        LinearLayout buttonLayout = findViewById(R.id.action_layout);
+        Button button = new Button(this);
+        button.setText("Pokemon");
+        buttonLayout.addView(button);
     }
-    private void createPlayer(){
-        Player player = new Player(this,R.drawable.player_1);
-    }
-
-
     private void createTileMap(){
         gameView = new GameTile(this);
 
@@ -56,13 +53,14 @@
     }
 
     private void beginPlayerMovement(){
-        new Timer().scheduleAtFixedRate(new TimerTask() {
+        new Timer().scheduleAtFixedRate(new TimerTask( ) {
             @Override
             public void run() {
                 gameView.changeXPos();
                 gameView.clearCanvas();
                 gameView.draw(canvas);
             }
+
         }, 0, 100);//put here time 1000 milliseconds=1 second
     }
 }
Index: app/src/main/res/layout/game_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/MainMenu\"\r\n    tools:context=\".MainActivity\"\r\n    android:orientation=\"vertical\"\r\n    android:gravity=\"center_horizontal\"\r\n    android:background=\"#34E8FF\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/topPanel\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"100dp\"\r\n        android:orientation=\"horizontal\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize=\"24dp\"\r\n            android:text=\"Just chilling up here for now xd\">\r\n        </TextView>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/game_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/action_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"100dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:background=\"#FFFF\">\r\n     </LinearLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/game_layout.xml	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ app/src/main/res/layout/game_layout.xml	(date 1606519563971)
@@ -36,6 +36,7 @@
         android:layout_height="100dp"
         android:orientation="horizontal"
         android:background="#FFFF">
+
      </LinearLayout>
 
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/operationx/GameTile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.res.Resources;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.Rect;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.service.quicksettings.Tile;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.LinearLayout;\r\n\r\nimport androidx.constraintlayout.motion.widget.Debug;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\n\r\npublic class GameTile extends View {\r\n    public Activity containerActivity = null;\r\n    private Canvas gameCanvas;\r\n    private Bitmap canvasBitmap;\r\n    private int fixSize,fixWidth,fixHeight;\r\n    private int dir;\r\n    private int xBoundaries;\r\n    public int xPos, yPos;\r\n    private Canvas canvas;\r\n\r\n    private Player player;\r\n    private GroundTile groundTile;\r\n    private MapTiles mapTiles;\r\n\r\n    private Drawable playerDrawable;\r\n    private ArrayList<Enemy> enemyList;\r\n\r\n    public GameTile(Activity currActivity){\r\n        super(currActivity);\r\n        createGameObjects();\r\n        setPreValues();\r\n        containerActivity = currActivity;\r\n        this.setBackgroundColor(0xFFFFFFFF);\r\n    }\r\n\r\n    private void createGameObjects(){\r\n        player = new Player(fixSize,fixWidth,fixHeight);\r\n        groundTile = new GroundTile();\r\n\r\n        // Later need to modify again\r\n        mapTiles = new MapTiles(fixSize,fixWidth,fixHeight);\r\n    }\r\n\r\n    private void setPreValues(){\r\n        fixSize = 200;\r\n        fixHeight = 200;\r\n        fixWidth = 200;\r\n        fixHeight = 200;\r\n        yPos = 1500;\r\n        xPos = 0;\r\n        dir = 0;\r\n        xBoundaries = fixSize * 14;\r\n    }\r\n    private float x1,x2;\r\n    static final int MIN_DISTANCE = 150;\r\n\r\n    @Override\r\n    public boolean onTouchEvent(MotionEvent event){\r\n        float x = event.getX();\r\n        float y = event.getY();\r\n        switch (event.getAction()) {\r\n            case MotionEvent.ACTION_DOWN:\r\n                x1 = event.getX();\r\n                break;\r\n            case MotionEvent.ACTION_UP:\r\n                x2 = event.getX();\r\n                float deltaX = x2 - x1;\r\n                if (Math.abs(deltaX) <= 100) {\r\n                    dir = 0;\r\n                } else if (deltaX < MIN_DISTANCE && xPos <= 0) {\r\n                    dir = -1;\r\n                } else if (deltaX > MIN_DISTANCE && xPos <= 0) {\r\n                    dir = 1;\r\n                }\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    protected void onDraw(Canvas canvas){\r\n        super.onDraw(canvas);\r\n        this.canvas = canvas;\r\n        createGroundTiles();\r\n        createObstacles();\r\n        createPlayer();\r\n    }\r\n\r\n    /*\r\n    private void drawAllObjects(){\r\n        ArrayList<Drawable> tileList = groundTile.getGroundTiles();\r\n        for(int i = 0; i < tileList.size(); i++){\r\n            Drawable tile = tileList.get(i);\r\n            tile.draw(canvas);\r\n        }\r\n    }\r\n\r\n     */\r\n    private void createGroundTiles(){\r\n        Drawable tile1 = getResources().getDrawable(R.drawable.ground_tile_1);\r\n        for(int i = 0; i < 20; i++){\r\n            tile1.setBounds(i*fixSize + xPos,yPos/2,\r\n                    i*fixSize + fixSize + xPos,yPos/2+fixHeight);\r\n            groundTile.addGroundTile(containerActivity,tile1.getBounds());\r\n            tile1.draw(canvas);\r\n        }\r\n    }\r\n\r\n    private void createPlayer(){\r\n        Drawable playerSprite = getResources().getDrawable(R.drawable.player_1);\r\n        playerSprite.setBounds(200,(yPos/2) - fixHeight,\r\n                200+200,yPos/2);\r\n        playerSprite.draw(this.canvas);\r\n        playerDrawable = playerSprite;\r\n    }\r\n\r\n    private void createObstacles(){\r\n        Drawable enemies = getResources().getDrawable(R.drawable.test_enemy_sprite);\r\n        enemyList = new ArrayList<Enemy>();\r\n\r\n        for(int i = 3; i < 8; i++){\r\n            enemies.setBounds(700*i + xPos,(yPos/2) - fixHeight,(700*i + fixWidth) + xPos,(yPos/2));\r\n            enemies.draw(this.canvas);\r\n            Enemy newEnemy = new Enemy(enemies.getBounds());\r\n            enemyList.add(newEnemy);\r\n        }\r\n    }\r\n\r\n    private boolean playerHitEnemy(Drawable player, ArrayList<Enemy> enemyList){\r\n        Enemy currEnemy = enemyList.get(0);\r\n        return player.getBounds().intersect(currEnemy.getBoundary());\r\n    }\r\n    public void clearCanvas(){\r\n        canvas.drawColor(Color.WHITE);\r\n        invalidate();\r\n    }\r\n\r\n    public void changeXPos(){\r\n        if(!playerHitEnemy(playerDrawable, enemyList) || dir == 1) {\r\n            if (xBoundaries > Math.abs(xPos + (dir * 50))) {\r\n                xPos += (dir * 50);\r\n            }\r\n            if (xPos > 0)\r\n                xPos = 0;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/GameTile.java	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ app/src/main/java/com/example/operationx/GameTile.java	(date 1606520379189)
@@ -135,15 +135,24 @@
         for(int i = 3; i < 8; i++){
             enemies.setBounds(700*i + xPos,(yPos/2) - fixHeight,(700*i + fixWidth) + xPos,(yPos/2));
             enemies.draw(this.canvas);
-            Enemy newEnemy = new Enemy(enemies.getBounds());
+            Enemy newEnemy = new Enemy(0,enemies.getBounds());
             enemyList.add(newEnemy);
         }
     }
 
     private boolean playerHitEnemy(Drawable player, ArrayList<Enemy> enemyList){
         Enemy currEnemy = enemyList.get(0);
-        return player.getBounds().intersect(currEnemy.getBoundary());
+        boolean enemyEncountered = player.getBounds().intersect(currEnemy.getBoundary());
+        return enemyEncountered;
     }
+
+    public void startInteractions(int actionID){
+        if(enemyList.get(0).playerAction(actionID)){
+            enemyList.remove(0);
+        }
+    }
+
+
     public void clearCanvas(){
         canvas.drawColor(Color.WHITE);
         invalidate();
Index: app/src/main/java/com/example/operationx/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx;\r\n\r\nimport android.graphics.Rect;\r\n\r\npublic class Enemy {\r\n\r\n    private Rect boundary;\r\n\r\n    public Enemy(Rect boundary) {\r\n        this.boundary = new Rect(boundary);\r\n        //this.boundary = boundary;\r\n    }\r\n\r\n    public Rect getBoundary(){\r\n        return boundary;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/Enemy.java	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ app/src/main/java/com/example/operationx/Enemy.java	(date 1606520379185)
@@ -2,16 +2,38 @@
 
 import android.graphics.Rect;
 
+import java.util.ArrayList;
+
 public class Enemy {
 
+    private int enemyID;
+    private ArrayList<Integer> weakness;
     private Rect boundary;
 
-    public Enemy(Rect boundary) {
+    public Enemy(int enemyID, Rect boundary) {
+        this.enemyID = enemyID;
         this.boundary = new Rect(boundary);
-        //this.boundary = boundary;
+        weakness = new ArrayList<Integer>();
+        enemyWeakness();
     }
 
     public Rect getBoundary(){
         return boundary;
     }
+
+    public boolean playerAction(int actionID){
+        return weakness.contains(actionID);
+    }
+
+    private void enemyWeakness(){
+        if(enemyID == 1) {
+            weakness.add(2);
+        }else if(enemyID == 2){
+            weakness.add(1);
+            weakness.add(2);
+        }else{
+            weakness.add(1);
+            weakness.add(3);
+        }
+    }
 }
Index: app/src/main/java/com/example/operationx/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.logging.Level;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    ArrayList<GameLevel> levels = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        //setContentView(R.layout.cephy_test_layout);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        MainMenuFragment mmFrag = new MainMenuFragment();\r\n        FragmentTransaction transaction =\r\n                getSupportFragmentManager().beginTransaction();\r\n        transaction.replace(R.id.main_layout,\r\n                mmFrag);\r\n        transaction.commit();\r\n    }\r\n\r\n    public void startGame(View view){\r\n        Intent intent = new Intent(this, OperationGameplay.class);\r\n        startActivity(intent);\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/MainActivity.java	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ app/src/main/java/com/example/operationx/MainActivity.java	(date 1606518428005)
@@ -17,7 +17,8 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        //setContentView(R.layout.cephy_test_layout);
+        setContentView(R.layout.cephy_test_layout);
+        /*
         setContentView(R.layout.activity_main);
 
         MainMenuFragment mmFrag = new MainMenuFragment();
@@ -26,6 +27,8 @@
         transaction.replace(R.id.main_layout,
                 mmFrag);
         transaction.commit();
+
+         */
     }
 
     public void startGame(View view){
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ .idea/gradle.xml	(date 1606518110045)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 5a37a31282c898cd42e07228b18e3d5278352a04)
+++ .idea/misc.xml	(date 1606518110042)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
