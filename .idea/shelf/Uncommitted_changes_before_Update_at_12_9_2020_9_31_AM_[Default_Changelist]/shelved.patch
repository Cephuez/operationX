Index: app/src/main/java/com/example/operationx/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.View;\r\n\r\nimport com.example.operationx.gameplay.OperationGameplay;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    ArrayList<GameLevel> levels = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        //setContentView(R.layout.cephy_test_layout);\r\n        playMusic();\r\n        setContentView(R.layout.activity_main);\r\n\r\n        MainMenuFragment mmFrag = new MainMenuFragment();\r\n        FragmentTransaction transaction =\r\n                getSupportFragmentManager().beginTransaction();\r\n        transaction.replace(R.id.main_layout,\r\n                mmFrag);\r\n        transaction.commit();\r\n\r\n    }\r\n\r\n\r\n    public void startGame(View view){\r\n        Intent intent = new Intent(this, OperationGameplay.class);\r\n        startActivity(intent);\r\n        playMusic();\r\n\r\n\r\n    }\r\n\r\n    public void playMusic(){\r\n\r\n        final MediaPlayer music = MediaPlayer.create(this,R.raw.blazer_rail);\r\n        music.setVolume(1,1);\r\n        music.setLooping(true);\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                music.start();\r\n            }\r\n        }).start();\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/MainActivity.java	(revision d7acc2b2113d48865c14041292619f4b4f024c1d)
+++ app/src/main/java/com/example/operationx/MainActivity.java	(date 1607531064359)
@@ -20,7 +20,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         //setContentView(R.layout.cephy_test_layout);
-        playMusic();
+        //playMusic();
         setContentView(R.layout.activity_main);
 
         MainMenuFragment mmFrag = new MainMenuFragment();
Index: app/src/main/java/com/example/operationx/gameplay/EnemyList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx.gameplay;\r\n\r\nimport android.app.Activity;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Rect;\r\nimport android.graphics.drawable.Drawable;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class EnemyList {\r\n    private Activity currActivity;\r\n    private ArrayList<Enemy> enemyList;\r\n    private int width, height, gameViewHeight, levelID;\r\n\r\n    public EnemyList(Activity currActivity, int width, int height, int gameViewHeight, int levelID){\r\n        this.currActivity = currActivity;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.gameViewHeight = gameViewHeight;\r\n        this.levelID = levelID;\r\n        enemyList = new ArrayList<Enemy>();\r\n        setUpList();\r\n    }\r\n\r\n    public Enemy get(int i ){\r\n        return enemyList.get(i);\r\n    }\r\n    public boolean isEmpty(){\r\n        return enemyList.isEmpty();\r\n    }\r\n    public void remove(int index){\r\n        enemyList.remove(index);\r\n    }\r\n    public int size(){\r\n        return enemyList.size();\r\n    }\r\n\r\n    public void playerAction(int actionID, Player player){\r\n        for(int i = 0; i < enemyList.size(); i++){\r\n            int playerX1 = player.getBounds().left;\r\n            int playerX2 = player.getBounds().right;\r\n            int playerY1 = player.getBounds().top;\r\n            int playerY2 = player.getBounds().bottom;\r\n\r\n            Enemy currEnemy = enemyList.get(i);\r\n            int enemyX1 = currEnemy.getBoundary().left;\r\n            int enemyX2 = currEnemy.getBoundary().right;\r\n            int enemyY1 = currEnemy.getBoundary().top;\r\n            int enemyY2 = currEnemy.getBoundary().bottom;\r\n\r\n            if(actionID == 2 && playerX2 < enemyX1){\r\n                System.out.println(currEnemy);\r\n                int newEnemyY = enemyY1 + ((enemyY2 - enemyY1) / 2);\r\n                if(playerY1 <= newEnemyY && newEnemyY <= playerY2) {\r\n                    enemyList.remove(i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void updateEnemies(Canvas canvas, int xPos){\r\n        for(int i = 0; i < enemyList.size(); i++){\r\n            Enemy currEnemy = enemyList.get(i);\r\n            Rect currBoundaries = currEnemy.getBoundary();\r\n            Rect newCurrBoundaries = new Rect();\r\n            newCurrBoundaries.set(currBoundaries.left + xPos, currBoundaries.top,\r\n                    currBoundaries.right + xPos, currBoundaries.bottom);\r\n            currEnemy.setColliderBoundary(newCurrBoundaries);\r\n            Drawable enemies = currEnemy.getDrawable();\r\n            enemies.setBounds(newCurrBoundaries);\r\n            enemies.draw(canvas);\r\n        }\r\n    }\r\n\r\n    private void setUpList(){\r\n        if(levelID == 1)\r\n            setLevelOne();\r\n        else if(levelID == 2){\r\n            setLevelTwo();\r\n        }\r\n    }\r\n\r\n    private void setLevelOne(){\r\n        for(int i = 1; i < 3; i++){\r\n            Rect bounds = new Rect(700*i,(gameViewHeight/2) - height,(700*i + width),(gameViewHeight/2));\r\n            Enemy newEnemy = new Enemy(levelID,0,bounds, currActivity);\r\n            enemyList.add(newEnemy);\r\n        }\r\n\r\n        for(int i = 3; i < 7; i++){\r\n            Rect bounds = new Rect(700*i,(gameViewHeight/2) - height,(700*i + width),(gameViewHeight/2));\r\n            Enemy newEnemy = new Enemy(levelID,1,bounds, currActivity);\r\n            enemyList.add(newEnemy);\r\n        }\r\n\r\n        for(int i = 7; i < 8; i++){\r\n            Rect bounds = new Rect(700*i,(gameViewHeight/2) - height,(700*i + width),(gameViewHeight/2));\r\n            Enemy newEnemy = new Enemy(levelID,2,bounds, currActivity);\r\n            enemyList.add(newEnemy);\r\n        }\r\n    }\r\n\r\n    private void setLevelTwo(){\r\n        Rect bounds = new Rect(700*1,0,(700*1 + width),(gameViewHeight/4));\r\n        Enemy newEnemy = new Enemy(levelID,0,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*2,20,(700*2 + width),(gameViewHeight/4)+20);\r\n        newEnemy = new Enemy(levelID,0,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*3,50,(700*3 + width),(gameViewHeight/4)+50);\r\n        newEnemy = new Enemy(levelID,0,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*4,200,(700*4 + width),(gameViewHeight/4) + 200);\r\n        newEnemy = new Enemy(levelID,0,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*5,300,(700*5  + width),(gameViewHeight/4) + 300);\r\n        newEnemy = new Enemy(levelID,0,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*6,250,(700*6 + width),(gameViewHeight/4) + 250);\r\n        newEnemy = new Enemy(levelID,1,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*7,(gameViewHeight/4),(700*7 + width),(gameViewHeight*2/4));\r\n        newEnemy = new Enemy(levelID,1,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*8,(gameViewHeight*2/4),(700*8 + width),(gameViewHeight*3/4));\r\n        newEnemy = new Enemy(levelID,1,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*9,(gameViewHeight * 2/4),(700*9 + width),(gameViewHeight*3/4));\r\n        newEnemy = new Enemy(levelID,1,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*10,(gameViewHeight*2/4)+100,(700*10 + width),(gameViewHeight*2/4) + 100 + (gameViewHeight/4));\r\n        newEnemy = new Enemy(levelID,2,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*11,(gameViewHeight*2/4),(700*11 + width),(gameViewHeight*3/4));\r\n        newEnemy = new Enemy(levelID,2,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n\r\n        bounds = new Rect(700*12,(gameViewHeight*3/4),(700*12 + width),gameViewHeight);\r\n        newEnemy = new Enemy(levelID,2,bounds, currActivity);\r\n        enemyList.add(newEnemy);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/gameplay/EnemyList.java	(revision d7acc2b2113d48865c14041292619f4b4f024c1d)
+++ app/src/main/java/com/example/operationx/gameplay/EnemyList.java	(date 1607531456356)
@@ -49,13 +49,18 @@
             int enemyY2 = currEnemy.getBoundary().bottom;
 
             if(actionID == 2 && playerX2 < enemyX1){
-                System.out.println(currEnemy);
                 int newEnemyY = enemyY1 + ((enemyY2 - enemyY1) / 2);
                 if(playerY1 <= newEnemyY && newEnemyY <= playerY2) {
                     enemyList.remove(i);
                     break;
                 }
             }
+
+            if(actionID == 3 && (0 < enemyX2 && 0 < enemyY2  && enemyX1 < gameViewHeight * 2 && enemyY1 < gameViewHeight)){
+                System.out.println("XD");
+                enemyList.remove(i);
+                i -= 1;
+            }
         }
 
     }
Index: app/src/main/java/com/example/operationx/gameplay/OperationGameplay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.operationx.gameplay;\r\n\r\nimport android.app.Activity;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.view.ViewGroup;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.example.operationx.ActionsFragment;\r\nimport com.example.operationx.GameInfoFragment;\r\nimport com.example.operationx.R;\r\n\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class OperationGameplay extends AppCompatActivity {\r\n\r\n    private Drawable tileTest;\r\n    private ImageView level;\r\n    private GameTile gameView;\r\n    private Canvas canvas;\r\n    private Activity activty;\r\n\r\n    private ActionsFragment af;\r\n    \r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        activty = this;\r\n        setContentView(R.layout.game_layout);\r\n        af = new ActionsFragment();\r\n        GameInfoFragment gif = new GameInfoFragment();\r\n        Bundle bundle = new Bundle();\r\n        bundle.putInt(\"LEVEL_FRAG_INT\", getIntent().getExtras().getInt(\"LEVEL_INT\"));\r\n        gif.setArguments(bundle);\r\n        createTileMap(getIntent().getExtras().getInt(\"LEVEL_INT\"));\r\n        beginPlayerMovement();\r\n\r\n        FragmentTransaction transaction =\r\n                getSupportFragmentManager().beginTransaction();\r\n\r\n        transaction.replace(R.id.game_info_panel, gif);\r\n        transaction.replace(R.id.action_layout, af);\r\n        transaction.commit();\r\n        System.out.println(\"Current LEVEL_INT: \" + getIntent().getExtras().getInt(\"LEVEL_INT\"));\r\n    }\r\n\r\n    private void createTileMap(int levelID){\r\n        af.getLevelID(levelID);\r\n        gameView = new GameTile(this,levelID);\r\n        FrameLayout gameLayout = findViewById(R.id.game_view);\r\n\r\n        Bitmap result = Bitmap.createBitmap(500,500,Bitmap.Config.ARGB_8888);\r\n        canvas = new Canvas(result);\r\n\r\n        gameView.draw(canvas);\r\n        gameView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 1500));\r\n\r\n        gameLayout.addView(gameView);\r\n    }\r\n\r\n    private void startLevel(int levelID){\r\n        gameView = new GameTile(this,levelID);\r\n    }\r\n\r\n    private void beginPlayerMovement() {\r\n        new Timer().scheduleAtFixedRate(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        gameView.clearCanvas(canvas);\r\n                        gameView.draw(canvas);\r\n                        af.playerAction(gameView);\r\n                        gameView.changeXPos();\r\n                        gameView.changeYPos();\r\n                        if(gameView.reachedFinishLine() || gameView.playerDead()) {\r\n                            cancel();\r\n                            onBackPressed();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }, 0, 75);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed(){\r\n        super.onBackPressed();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/operationx/gameplay/OperationGameplay.java	(revision d7acc2b2113d48865c14041292619f4b4f024c1d)
+++ app/src/main/java/com/example/operationx/gameplay/OperationGameplay.java	(date 1607531220923)
@@ -81,10 +81,12 @@
                         af.playerAction(gameView);
                         gameView.changeXPos();
                         gameView.changeYPos();
-                        if(gameView.reachedFinishLine() || gameView.playerDead()) {
+                        if(gameView.reachedFinishLine()) {
                             cancel();
                             onBackPressed();
                         }
+                        if(gameView.playerDead())
+                            onBackPressed();
                     }
                 });
             }
